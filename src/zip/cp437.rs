const CP437: [char; 256] = [
    '\u{0000}',
    '\u{0001}',
    '\u{0002}',
    '\u{0003}',
    '\u{0004}',
    '\u{0005}',
    '\u{0006}',
    '\u{0007}',
    '\u{0008}',
    '\u{0009}',
    '\u{000a}',
    '\u{000b}',
    '\u{000c}',
    '\u{000d}',
    '\u{000e}',
    '\u{000f}',
    '\u{0010}',
    '\u{0011}',
    '\u{0012}',
    '\u{0013}',
    '\u{0014}',
    '\u{0015}',
    '\u{0016}',
    '\u{0017}',
    '\u{0018}',
    '\u{0019}',
    '\u{001a}',
    '\u{001b}',
    '\u{001c}',
    '\u{001d}',
    '\u{001e}',
    '\u{001f}',
    '\u{0020}',
    '\u{0021}',
    '\u{0022}',
    '\u{0023}',
    '\u{0024}',
    '\u{0025}',
    '\u{0026}',
    '\u{0027}',
    '\u{0028}',
    '\u{0029}',
    '\u{002a}',
    '\u{002b}',
    '\u{002c}',
    '\u{002d}',
    '\u{002e}',
    '\u{002f}',
    '\u{0030}',
    '\u{0031}',
    '\u{0032}',
    '\u{0033}',
    '\u{0034}',
    '\u{0035}',
    '\u{0036}',
    '\u{0037}',
    '\u{0038}',
    '\u{0039}',
    '\u{003a}',
    '\u{003b}',
    '\u{003c}',
    '\u{003d}',
    '\u{003e}',
    '\u{003f}',
    '\u{0040}',
    '\u{0041}',
    '\u{0042}',
    '\u{0043}',
    '\u{0044}',
    '\u{0045}',
    '\u{0046}',
    '\u{0047}',
    '\u{0048}',
    '\u{0049}',
    '\u{004a}',
    '\u{004b}',
    '\u{004c}',
    '\u{004d}',
    '\u{004e}',
    '\u{004f}',
    '\u{0050}',
    '\u{0051}',
    '\u{0052}',
    '\u{0053}',
    '\u{0054}',
    '\u{0055}',
    '\u{0056}',
    '\u{0057}',
    '\u{0058}',
    '\u{0059}',
    '\u{005a}',
    '\u{005b}',
    '\u{005c}',
    '\u{005d}',
    '\u{005e}',
    '\u{005f}',
    '\u{0060}',
    '\u{0061}',
    '\u{0062}',
    '\u{0063}',
    '\u{0064}',
    '\u{0065}',
    '\u{0066}',
    '\u{0067}',
    '\u{0068}',
    '\u{0069}',
    '\u{006a}',
    '\u{006b}',
    '\u{006c}',
    '\u{006d}',
    '\u{006e}',
    '\u{006f}',
    '\u{0070}',
    '\u{0071}',
    '\u{0072}',
    '\u{0073}',
    '\u{0074}',
    '\u{0075}',
    '\u{0076}',
    '\u{0077}',
    '\u{0078}',
    '\u{0079}',
    '\u{007a}',
    '\u{007b}',
    '\u{007c}',
    '\u{007d}',
    '\u{007e}',
    '\u{007f}',
    '\u{00c7}',
    '\u{00fc}',
    '\u{00e9}',
    '\u{00e2}',
    '\u{00e4}',
    '\u{00e0}',
    '\u{00e5}',
    '\u{00e7}',
    '\u{00ea}',
    '\u{00eb}',
    '\u{00e8}',
    '\u{00ef}',
    '\u{00ee}',
    '\u{00ec}',
    '\u{00c4}',
    '\u{00c5}',
    '\u{00c9}',
    '\u{00e6}',
    '\u{00c6}',
    '\u{00f4}',
    '\u{00f6}',
    '\u{00f2}',
    '\u{00fb}',
    '\u{00f9}',
    '\u{00ff}',
    '\u{00d6}',
    '\u{00dc}',
    '\u{00a2}',
    '\u{00a3}',
    '\u{00a5}',
    '\u{20a7}',
    '\u{0192}',
    '\u{00e1}',
    '\u{00ed}',
    '\u{00f3}',
    '\u{00fa}',
    '\u{00f1}',
    '\u{00d1}',
    '\u{00aa}',
    '\u{00ba}',
    '\u{00bf}',
    '\u{2310}',
    '\u{00ac}',
    '\u{00bd}',
    '\u{00bc}',
    '\u{00a1}',
    '\u{00ab}',
    '\u{00bb}',
    '\u{2591}',
    '\u{2592}',
    '\u{2593}',
    '\u{2502}',
    '\u{2524}',
    '\u{2561}',
    '\u{2562}',
    '\u{2556}',
    '\u{2555}',
    '\u{2563}',
    '\u{2551}',
    '\u{2557}',
    '\u{255d}',
    '\u{255c}',
    '\u{255b}',
    '\u{2510}',
    '\u{2514}',
    '\u{2534}',
    '\u{252c}',
    '\u{251c}',
    '\u{2500}',
    '\u{253c}',
    '\u{255e}',
    '\u{255f}',
    '\u{255a}',
    '\u{2554}',
    '\u{2569}',
    '\u{2566}',
    '\u{2560}',
    '\u{2550}',
    '\u{256c}',
    '\u{2567}',
    '\u{2568}',
    '\u{2564}',
    '\u{2565}',
    '\u{2559}',
    '\u{2558}',
    '\u{2552}',
    '\u{2553}',
    '\u{256b}',
    '\u{256a}',
    '\u{2518}',
    '\u{250c}',
    '\u{2588}',
    '\u{2584}',
    '\u{258c}',
    '\u{2590}',
    '\u{2580}',
    '\u{03b1}',
    '\u{00df}',
    '\u{0393}',
    '\u{03c0}',
    '\u{03a3}',
    '\u{03c3}',
    '\u{00b5}',
    '\u{03c4}',
    '\u{03a6}',
    '\u{0398}',
    '\u{03a9}',
    '\u{03b4}',
    '\u{221e}',
    '\u{03c6}',
    '\u{03b5}',
    '\u{2229}',
    '\u{2261}',
    '\u{00b1}',
    '\u{2265}',
    '\u{2264}',
    '\u{2320}',
    '\u{2321}',
    '\u{00f7}',
    '\u{2248}',
    '\u{00b0}',
    '\u{2219}',
    '\u{00b7}',
    '\u{221a}',
    '\u{207f}',
    '\u{00b2}',
    '\u{25a0}',
    '\u{00a0}',
];

pub fn to_char(c: u8) -> char {
    CP437[c as usize]
}

#[test]
fn test_ascii() {
    for c in 0..128 {
        assert_eq!(c as char, to_char(c));
    }
}
